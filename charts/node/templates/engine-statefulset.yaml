{{- if eq .Values.common.role "validator" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chainflip-engine.fullname" . }}
  labels:
    {{- include "chainflip-engine.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "chainflip-engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "chainflip-engine.fullname" . }}
      labels:
        {{- include "chainflip-engine.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: port-check
          image: alpine:latest
          command:
            - sh
            - -c
            - |
              set -x
              while true; do
                nc -zv {{ include "chainflip-node.fullname" . }} {{ .Values.node.ports.rpc.port }}
                if [ $? -eq 0 ]; then
                  exit 0
                fi
                sleep 1
              done
      {{- with .Values.engine.extraInitContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: chainflip-engine
          image: "{{ include "chainflip-engine.image" . }}"
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          command:
            - /usr/local/bin/chainflip-engine
          args:
            - --config-root={{ .Values.common.basePath }}
          {{- with .Values.engine.extraArgs }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.engine.ports.ip.port }}
              name: ip
              protocol: TCP
            {{- if .Values.engine.ports.metrics.enabled }}
            - containerPort: {{ .Values.engine.ports.metrics.port }}
              name: metrics
              protocol: TCP
            {{- end }}
            {{- if  .Values.engine.ports.healthcheck.enabled }}
            - containerPort: {{ .Values.engine.ports.healthcheck.port }}
              name: healthcheck
          readinessProbe:
            httpGet:
              path: /health
              port: healthcheck
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: healthcheck
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            {{- end }}
          {{- with .Values.engine.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.common.basePath }}
            - name: keys
              mountPath: {{ .Values.common.keys.keysPath }}
              readOnly: true
            - name: settings
              mountPath: {{ .Values.common.basePath }}/config
              readOnly: false
          {{- with .Values.engine.extraEnv }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.engine.extraEnvFrom }}
          envFrom:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.runtime_upgrade_mode.enabled }}
        - name: chainflip-engine-prv
          image: "{{ include "chainflip-engine-prv.image" . }}"
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          command:
            - /usr/local/bin/chainflip-engine
            - --p2p.port={{ .Values.runtime_upgrade_mode.previous_engine_port }}
          args:
            - --config-root={{ .Values.common.basePath }}
          {{- with .Values.engine.extraArgs }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.runtime_upgrade_mode.previous_engine_port }}
              name: ip-prv
              protocol: TCP
            {{- if .Values.engine.ports.metrics.enabled }}
            - containerPort: {{ .Values.engine.ports.metrics.port }}
              name: metrics-prv
              protocol: TCP
            {{- end }}
            {{- if  .Values.engine.ports.healthcheck.enabled }}
            - containerPort: {{ .Values.engine.ports.healthcheck.port }}
              name: healthcheck-prv
          readinessProbe:
            httpGet:
              path: /health
              port: healthcheck-prv
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: healthcheck-prv
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            {{- end }}
{{/*          {{- with .Values.engine.resources }}*/}}
{{/*          resources:*/}}
{{/*          {{- toYaml . | nindent 12 }}*/}}
{{/*          {{- end }}*/}}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.common.basePath }}
            - name: keys
              mountPath: {{ .Values.common.keys.keysPath }}
              readOnly: true
            {{- if .Values.runtime_upgrade_mode.engine_settings.existingConfigMap }}
            - name: settings-prv
            {{- else }}
            - name: settings
            {{- end }}
              mountPath: {{ .Values.common.basePath }}/config
              readOnly: false
          {{- with .Values.engine.extraEnv }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.engine.extraEnvFrom }}
          envFrom:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- with .Values.engine.affinity }}
      affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.engine.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.engine.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: settings
          configMap:
            name: {{ .Values.engine.settings.existingConfigMap | default (include "chainflip-engine.fullname" .) }}
            items:
              - key: Settings.toml
                path: Settings.toml
        {{- if and .Values.runtime_upgrade_mode.enabled .Values.runtime_upgrade_mode.engine_settings.existingConfigMap }}
        - name: settings-prv
          configMap:
            name: {{ .Values.runtime_upgrade_mode.engine_settings.existingConfigMap }}
        {{- end}}
        - name: keys
          secret:
            secretName: {{ .Values.common.keys.existingSecret | default (include "node.fullname" . ) }}
            items:
              - key: node-key
                path: node_key_file
              - key: signing-key
                path: signing_key_file
              - key: ethereum-key
                path: ethereum_key_file
        {{- if .Values.engine.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.engine.persistence.existingClaim }}
        {{- else }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        labels:
          {{- include "chainflip-engine.selectorLabels" . | nindent 10 }}
      spec:
        {{- with .Values.engine.persistence.accessModes }}
        accessModes:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.engine.persistence.storageClass }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          requests:
            storage: "{{ .Values.engine.persistence.size }}"
  {{- end }}
{{- end }}