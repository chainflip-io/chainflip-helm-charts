# -- override the naming of the node chart
fullnameOverride: ""

# -- override the default value of the name
nameOverride: ""

# -- select an existing secret where your repository credentials are stored
imagePullSecrets: []

# -- shared settings across the chainflip-engine and chainflip-node
common:
  # -- desired role for your node; `validator` or `archive`
  role: "validator" # validator, archive

  # -- root path for the chainflip configuration
  basePath: /etc/chainflip

  # -- default path for validator keys
  keys:
    # -- use the chainflip-cli to inject all keys on start
    generateKeysOnStart: false

    # -- base path for all keys
    keysPath: /etc/chainflip/keys

    # -- node key file name
    nodeKeyFileName: node_key_file

    # -- node key; recommended to leave empty and provide through a secret
    nodeKey: ""

    # -- signing key file name
    signingKeyFileName: signing_key_file

    # -- signing key; recommended to leave empty and provide through a secret
    signingKey: ""

    # -- ethereum key file name
    ethereumKeyFileName: ethereum_key_file

    # -- ethereum key; recommended to leave empty and provide through a secret
    ethereumKey: ""

    # -- arbitrum key file name
    arbitrumKeyFileName: arbitrum_key_file

    # -- arbitrum key; recommended to leave empty and provide through a secret
    arbitrumKey: ""

    # -- exiting secret with keys
    existingSecret: ""

network:
  # -- chain settings
  chain:
    # -- chain name; `perseverance`
    name: "test"

    # -- download the chainspec from a URL
    chainspecUrl: ""

  # -- network bootnodes
  bootnodes: []

# -- chainflip-node configuration
node:
  # -- override the default value of the node pod
  fullnameOverride: ""

  # -- replicas; only available for archive nodes
  replicas: 1

  # -- chainflip-node image settings
  image:
    # -- chainflip-node image repository
    repository: docker.io/chainfliplabs/chainflip-node

    # -- chainflip-node image tag; default to `network.chain.name`
    tag: ""

    # -- chainflip-node image pull policy
    pullPolicy: Always

  # -- use the legacy rpc commands for the node
  legacyRpc: false

  # -- chainflip-node extra arguments
  extraArgs:
    - --name="Chainflip Node"

  # -- set extra environment variables
  extraEnv: []

  # -- set extra environment variables from a secret
  extraEnvFrom: []

  # -- ports exposed by the chainflip-node
  ports:
    # -- chainflip-node rpc port
    rpc:
      # -- enabled
      enabled: true

      # -- chainflip-node rpc port
      port: "9944"

      # -- expose chainflip-node rpc port
      expose: true

      # -- chainflip-node rpc service configuration
      service:
        # -- chainflip-node rpc service type
        type: ClusterIP

        # -- chainflip-node rpc service port
        port: 9944

        # -- chainflip-node rpc service annotations
        annotations: {}
    # -- chainflip-node p2p port
    p2p:
      # -- enabled
      enabled: true

      # -- chainflip-node rpc port
      port: 30333

      # -- chainflip-node rpc service configuration
      service:
        # -- chainflip-node rpc service type
        type: NodePort

        # -- chainflip-node rpc service port
        port: 30333

        # -- chainflip-node rpc node port, if type is NodePort. Defaults to `ports.p2p.port`
        # nodePort: 30333

        # -- chainflip-node rpc service annotations
        annotations: {}


    metrics:
      # -- enable prometheus metrics
      enabled: false

      # -- prometheus metrics port
      port: 9615

      # -- expose prometheus metrics
      expose: true

      # -- prometheus metrics service configuration
      service:
        # -- prometheus metrics service type
        type: ClusterIP

        # -- prometheus metrics service port
        annotations: {}
  #        prometheus.io/chainflip-unit: "chainflip-engine"
  #        prometheus.io/port: "metrics"

  # -- chainflip-node resources
  resources: {}

  # -- chaindata volume settings
  persistence:
    # -- enable chaindata persistence
    enabled: true

    # -- reference an existing PVC
    existingClaim: ""

    # -- chaindata volume size
    size: 100Gi

    # -- chaindata volume storage class
    storageClass: ""

    # -- chaindata volume access mode
    accessModes:
      - ReadWriteOnce

  # -- chainflip-node service configuration
  service:
    # -- chainflip-node service type
    type: ClusterIP

    # -- chainflip-node service port
    port: 80

    # -- chainflip-node service annotations
    annotations: {}

    # -- Session affinity
    sessionAffinity:
      enabled: false

  ingress:
    enabled: false
    ingressClassName: ""
    annotations: {}
    hosts: []
    tls: []

  livenessProbe:
    # -- enable liveness probe
    enabled: true

    # -- liveness probe initial delay
    initialDelaySeconds: 30

    # -- liveness probe timeout
    timeoutSeconds: 30

    # -- liveness probe period
    periodSeconds: 30

    # -- liveness probe failure threshold
    failureThreshold: 3

    # -- liveness probe success threshold
    successThreshold: 1

  readinessProbe:
    # -- enable readiness probe
    enabled: true

    # -- readiness probe initial delay
    initialDelaySeconds: 30

    # -- readiness probe timeout
    timeoutSeconds: 30

    # -- readiness probe period
    periodSeconds: 10

    # -- readiness probe failure threshold
    failureThreshold: 10

    # -- readiness probe success threshold
    successThreshold: 1

  # -- set node selector
  nodeSelector: {}

  # -- set pod affinity
  affinity: {}

  # -- set pod tolerations
  tolerations: []

  # -- set topology spread constraints
  topologySpreadConstraints: []

  # -- set pod disruption budget
  pdb:
    enabled: false
    minAvailable: 1
  syncMode: "warp" # warp, full
# -- chainflip-engine configuration
engine:
  # -- override the default value of the engine pod
  fullnameOverride: ""

  # -- chainflip-engine image settings
  image:
    # -- chainflip-engine image repository
    repository: docker.io/chainfliplabs/chainflip-engine

    # -- chainflip-engine image tag
    tag: ""

    # -- chainflip-engine image pull policy
    pullPolicy: Always

  # -- chainflip-engine extra arguments
  extraArgs: {}

  # -- set extra environment variables
  extraEnv: []

  # -- set extra environment variables from a secret
  extraEnvFrom: []

  # -- chainflip-engine resources
  resources: {}

  # -- chainflip-engine ports
  ports:
    # -- chainflip-engine p2p port
    ip:
      # -- chainflip-engine p2p port
      port: 30078

      # -- expose chainflip-engine p2p port
      expose: true

      # -- chainflip-engine p2p service configuration
      service:
        # -- chainflip-engine p2p service type
        type: NodePort

        # -- chainflip-engine p2p service port
        port: 30078

        # -- chainflip-engine p2p service annotations
        annotations: {}

    metrics:
      # -- enable prometheus metrics
      enabled: false

      # -- prometheus metrics port
      port: 5566

      # -- expose prometheus metrics
      hostname: "0.0.0.0"

      # -- prometheus metrics service configuration
      service:
        # -- prometheus metrics service type
        type: ClusterIP

        # -- prometheus metrics service port
        annotations: {}
    #        prometheus.io/chainflip-unit: "chainflip-engine"
    #        prometheus.io/port: "metrics"


    # -- chainflip-engine healthcheck settings
    healthcheck:
      # -- enable chainflip-engine healthcheck
      enabled: true

      # -- chainflip-engine healthcheck hostname
      hostname: "0.0.0.0"

      # -- chainflip-engine healthcheck port
      port: "5555"

      # -- chainflip-engine healthcheck service configuration
      service:
        # -- chainflip-engine healthcheck service type
        type: ClusterIP

        # -- chainflip-engine healthcheck service port
        port: 5555

        # -- chainflip-engine healthcheck service annotations
        annotations: {}

  # -- chainflip-engine persistence settings
  persistence:
    # -- enable chainflip-engine persistence
    enabled: true

    # -- reference an existing PVC
    existingClaim: ""

    # -- chainflip-engine volume size
    size: 5Gi

    # -- chainflip-engine volume storage class
    storageClass: ""

    # -- chainflip-engine volume access mode
    accessModes:
    - ReadWriteOnce

  # -- chainflip-engine Settings.toml configuration
  settings:
    # -- existing configMap with Settings.toml
    existingConfigMap: ""

    # -- node_p2p settings
    node_p2p:

      # -- local ip address; this will set the ClusterIP of the service
      ip_address: ""

      # -- allow local ip addresses
      allow_local_ip: false

    # -- ethereum settings
    eth:
      # -- ethereum node http endpoint
      ws_endpoint: ""

      # -- ethereum node ws endpoint
      http_endpoint: ""

    # -- set up an optional backup ethereum node
    eth_backup:

      # -- enabled
      enabled: false

      # -- ethereum backup node ws endpoint
      ws_endpoint: ""

      # -- ethereum backup node http endpoint
      http_endpoint: ""

    # -- polkadot settings
    dot:
      # -- polkadot node ws endpoint
      ws_endpoint: ""

      # -- polkadot node http endpoint
      http_endpoint: ""

    # -- set up an optional backup ethereum node
    dot_backup:

      # -- enabled
      enabled: false

      # -- polkadot backup node ws endpoint
      ws_endpoint: ""

      # -- polkadot backup node http endpoint
      http_endpoint: ""

    # -- bitcoin settings
    btc:
      # -- bitcoin node http endpoint
      http_endpoint: ""

      # -- bitcoin rpc user
      basic_auth_user: ""

      # -- bitcoin rpc password
      basic_auth_password: ""

    btc_backup:
      # -- enabled
      enabled: false

      # -- bitcoin backup node http endpoint
      http_endpoint: ""

      # -- bitcoin backup rpc user
      rpc_user: ""

      # -- bitcoin backup rpc password
      rpc_password: ""

    arb:
      # -- arb node ws endpoint
      ws_endpoint: ""

      # -- arb node http endpoint
      http_endpoint: ""

    arb_backup:
      # -- enabled
      enabled: false

      # -- arb node ws endpoint
      ws_endpoint: ""

      # -- arb node http endpoint
      http_endpoint: ""
    sol:
      # -- solana node http endpoint
      http_endpoint: ""
  livenessProbe:
    # -- enable liveness probe
    enabled: true

    # -- liveness probe initial delay
    initialDelaySeconds: 30

    # -- liveness probe timeout
    timeoutSeconds: 30

    # -- liveness probe period
    periodSeconds: 30

    # -- liveness probe failure threshold
    failureThreshold: 3

    # -- liveness probe success threshold
    successThreshold: 1

  readinessProbe:
    # -- enable readiness probe
    enabled: true

    # -- readiness probe initial delay
    initialDelaySeconds: 30

    # -- readiness probe timeout
    timeoutSeconds: 30

    # -- readiness probe period
    periodSeconds: 30

    # -- readiness probe failure threshold
    failureThreshold: 3

    # -- readiness probe success threshold
    successThreshold: 1

  # -- define extra init containers on the engine
  extraInitContainers: []

  # -- set node selector
  nodeSelector: {}

  # -- set pod affinity
  affinity: {}

  # -- set pod tolerations
  tolerations: []

  # -- set topology spread constraints
  topologySpreadConstraints: []

  # -- set pod disruption budget
  pdb:
    enabled: false
    minAvailable: 1

# -- chainflip-cli configuration
cli:
  # -- enable chainflip-cli
  enabled: true

  # -- chainflip-cli image settings
  image:
    # -- chainflip-cli image repository
    repository: docker.io/chainfliplabs/chainflip-cli

    # -- chainflip-cli image tag
    tag: ""

    # -- chainflip-cli image pull policy
    pullPolicy: Always

# -- hook configuration
hook:
  # -- add extra annotations to the create-keys hook
  extraAnnotations: {}

# -- create extra kubernetes manifests
extraManifests: []
